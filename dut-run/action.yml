name: "Run on DUT"
author: "Igor Pecovnik"
inputs:
  DUT_USER:
    required: false
    default: 'root'
  DUT_IP:
    required: true
  DUT_SLUG:
    required: true
  BOARD_NAME:
    required: true
  LINUXFAMILY:
    required: true
  BRANCH:
    required: true
  TIMEOUT:
    required: false
    default: 300
outputs:
  status:
    description: "Exit status"
    value: ${{ steps.value.outputs.status }}
description: "DUT runner"
runs:
  using: "composite"
  steps:
         
      - name: "Check if kernel package exists"
        shell: bash 
        run: |

          # check if kernel install is possible
          if ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search linux-image-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}" 2>/dev/null | grep linux-image-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}; then

            # purge previously installed ones
            ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt-get -y purge '^linux-image-*'" || true
            
            # install new
            ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt install -y linux-image-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}"
            
            echo "Install: linux-image-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "STATUS=notfound" >> $GITHUB_ENV
            echo "Kernel for ${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }} does not exists" >> $GITHUB_STEP_SUMMARY
          fi

          # check if DTB install is possible
          if ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search linux-dtb-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}" 2>/dev/null | grep linux-dtb-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}; then

            # purge previously installed ones
            ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt-get -y purge '^linux-dtb-*'" || true
            
            # install new
            ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt install -y linux-dtb-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}"
            
            echo "Install: linux-dtb-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "STATUS=notfound" >> $GITHUB_ENV
            echo "DTB for ${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }} does not exists" >> $GITHUB_STEP_SUMMARY
          fi

          # check if headers install is possible
          if ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search linux-headers-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}" 2>/dev/null | grep linux-headers-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}; then

            # purge previously installed ones
            ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt-get -y purge '^linux-headers-*'" || true
            
            # install new
            ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt install -y linux-headers-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}"
            
            echo "Install: linux-headers-${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "STATUS=notfound" >> $GITHUB_ENV
            echo "Headers for ${{ inputs.BRANCH }}-${{ inputs.LINUXFAMILY }} does not exists" >> $GITHUB_STEP_SUMMARY
          fi
          
          # list other files
          #ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search  armbian-bsp-cli-${{ env.DUT_SLUG }}-legacy" || true
          #ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search  armbian-bsp-desktop-${{ env.DUT_SLUG }}-legacy" || true
          #ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search  armbian-zsh" || true
          #ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search  armbian-firmware-full" || true
          #ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "apt search  armbian-plymouth-theme" || true           

      - name: Reboot
        shell: bash 
        run: |

          #ssh -o StrictHostKeyChecking=no ${{ inputs.DUT_USER }}@${{ inputs.DUT_IP }} "shutdown --no-wall -r now" || true
          secs=${{ inputs.TIMEOUT }}
          while [ $secs -gt 0 ]; do
             echo -ne "$secs\033[0K\r"
             sleep 1
             : $((secs--))
             if nc -z "${{ inputs.DUT_IP }}" 22 -w 15 2>/dev/null; then break; fi
          done
          if [ $secs -eq 0 ]; then echo "STATUS=timeout" >> $GITHUB_ENV; fi

      - name: Collect data
        if: {{ env.STATUS != 'notfound' && env.STATUS != 'timeout' }}
        uses: armbian/actions/collect-data@main
        with:
          STATUS: "${{ env.STATUS }}"
          DUT_IP: "${{ inputs.DUT_IP }}"

      - name: Generate JSON
        shell: bash 
        run: |

          STARTED=$(date -u +"%Y-%m-%d&nbsp;%H:%M:%S")
          
          cat <<- EOD >> data-"${{ inputs.DUT_IP }}"-"${{ inputs.DUT_SLUG }}".parts
          {
            "started" : "${STARTED}",
            "dut_ip" : "${{ inputs.DUT_IP }}",
            "board_name" : "${{ inputs.BOARD_NAME }}",
            "board_slug" : "${{ inputs.DUT_SLUG }}",
            "u-boot" : "${{ env.UBOOT }}",
            "kernel" : "${{ env.KERNEL }}",
            "iperf" : "${{ env.IPERF }}",
            "sevenzip" : "${{ env.SEVENZIP }}",
            "armbian_monitor" : "${{ env.ARMBIAN_MONITOR }}",
            "kernel_target" : "${{ inputs.BRANCH }}"
          },
          EOD
      
      - name: Upload JSON
        uses: actions/upload-artifact@v3
        with:
          name: JSON
          path: data-*.*

      - name: Set output
        if: always()
        id: value
        shell: bash 
        run:
          echo "status={{ env.STATUS }}" >> $GITHUB_OUTPUT
